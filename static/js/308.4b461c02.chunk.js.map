{"version":3,"file":"static/js/308.4b461c02.chunk.js","mappings":"0NAyDA,QAjDA,WACE,MAAOA,EAAWC,IAAgBC,EAAAA,EAAAA,UAAS,KACpCC,EAAOC,IAAYF,EAAAA,EAAAA,UAAS,KAC5BG,EAAWC,IAAgBJ,EAAAA,EAAAA,WAAS,IAE3CK,EAAAA,EAAAA,YAAU,KACeC,WACrB,IACEF,GAAa,GACb,MAAMG,QAAiBC,EAAAA,EAAMC,IAC3B,8EAEFV,EAAaQ,EAASG,KAAKC,SAC3BP,GAAa,EACf,CAAE,MAAOQ,GACPV,EAAS,8MACX,GAEFW,EAAgB,GACf,IAEH,MAAMC,GAAWC,EAAAA,EAAAA,MACjB,OAAId,GAAce,EAAAA,EAAAA,KAAA,KAAAC,SAAIhB,KAGpBiB,EAAAA,EAAAA,MAACC,EAAAA,GAAa,CAAAF,SAAA,EACZD,EAAAA,EAAAA,KAAA,MAAAC,SAAI,mBACJD,EAAAA,EAAAA,KAACI,EAAAA,EAAM,CAACC,QAASA,IAAMP,GAAU,GAAIQ,QAAQ,WAAUL,UACrDD,EAAAA,EAAAA,KAACO,EAAAA,EAAqB,MAEvBpB,GACCa,EAAAA,EAAAA,KAAA,MAAAC,SAAI,gBAEJD,EAAAA,EAAAA,KAAA,SAAAC,UACED,EAAAA,EAAAA,KAAA,SAAAC,SACGnB,EAAU0B,KAAKC,IACdT,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAAA,MAAAC,UACED,EAAAA,EAAAA,KAACU,EAAAA,GAAI,CAACC,GAAE,cAAAC,OAAgBH,EAASI,IAAKZ,SAAEQ,EAASK,UAF5CL,EAASK,cAWhC,C","sources":["pages/variables/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { VariablesList } from \"../../Styles\";\r\nimport Button from \"@mui/material/Button\";\r\nimport KeyboardBackspaceIcon from \"@mui/icons-material/KeyboardBackspace\";\r\n\r\nfunction Variables() {\r\n  const [variables, setVariables] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const fetchVariables = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        const response = await axios.get(\r\n          \"https://vpic.nhtsa.dot.gov/api/vehicles/getvehiclevariablelist?format=json\"\r\n        );\r\n        setVariables(response.data.Results);\r\n        setIsLoading(false);\r\n      } catch (err) {\r\n        setError(\"Не вдалося завантажити список змінних.\");\r\n      }\r\n    };\r\n    fetchVariables();\r\n  }, []);\r\n\r\n  const navigate = useNavigate();\r\n  if (error) return <p>{error}</p>;\r\n\r\n  return (\r\n    <VariablesList>\r\n      <h2>All variables</h2>\r\n      <Button onClick={() => navigate(-1)} variant=\"outlined\">\r\n        <KeyboardBackspaceIcon />\r\n      </Button>\r\n      {isLoading ? (\r\n        <h3>Loading...</h3>\r\n      ) : (\r\n        <table>\r\n          <tbody>\r\n            {variables.map((variable) => (\r\n              <tr key={variable.Name}>\r\n                <td>\r\n                  <Link to={`/variables/${variable.ID}`}>{variable.Name}</Link>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      )}\r\n    </VariablesList>\r\n  );\r\n}\r\n\r\nexport default Variables;\r\n"],"names":["variables","setVariables","useState","error","setError","isLoading","setIsLoading","useEffect","async","response","axios","get","data","Results","err","fetchVariables","navigate","useNavigate","_jsx","children","_jsxs","VariablesList","Button","onClick","variant","KeyboardBackspaceIcon","map","variable","Link","to","concat","ID","Name"],"sourceRoot":""}